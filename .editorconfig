# https://github.com/dotnet/coreclr/blob/master/.editorconfig

root = true

[*]
end_of_line = crlf
insert_final_newline = false
indent_style = space
indent_size = 4

[*.xml]
charset = utf-8
indent_size = 2

[*.xaml]
charset = utf-8
indent_size = 2

[*.cs]
charset = utf-8
csharp_new_line_before_catch =true:suggestion
csharp_new_line_before_else = true:suggestion
csharp_new_line_before_finally = true:suggestion
csharp_new_line_before_members_in_anonymous_types = true:suggestion
csharp_new_line_before_members_in_object_initializers = true:suggestion
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true:suggestion
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = do_not_ignore
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false
csharp_style_conditional_delegate_call = true:suggestion
csharp_style_expression_bodied_accessors = true:suggestion
csharp_style_expression_bodied_constructors = false:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_operators = false:suggestion
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_throw_expression = false:suggestion
csharp_style_var_elsewhere = true:suggestion
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
dotnet_sort_system_directives_first = false
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_object_initializer = true:suggestion
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion
dotnet_style_qualification_for_event = false:suggestion
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
#csharp_style_expression_bodied_methods = false:suggestion

# Casing styles
dotnet_naming_style.pascal_case_style.capitalization = pascal_case
dotnet_naming_style.camel_case_style.capitalization = camel_case

# Class names should be PascalCase
dotnet_naming_symbols.class_names.applicable_kinds = class
dotnet_naming_rule.class_names_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.class_names_should_be_pascal_case.symbols = class_names
dotnet_naming_rule.class_names_should_be_pascal_case.style = pascal_case_style

# Struct names should be PascalCase
dotnet_naming_symbols.struct_names.applicable_kinds = struct
dotnet_naming_rule.struct_names_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.struct_names_should_be_pascal_case.symbols = struct_names
dotnet_naming_rule.struct_names_should_be_pascal_case.style = pascal_case_style

# Enum names should be PascalCase
dotnet_naming_symbols.enum_names.applicable_kinds = enum
dotnet_naming_rule.enum_names_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.enum_names_should_be_pascal_case.symbols = enum_names
dotnet_naming_rule.enum_names_should_be_pascal_case.style = pascal_case_style

# Interface names should be IPascalCase
dotnet_naming_style.interface_pascal_case_style.capitalization = pascal_case
dotnet_naming_style.interface_pascal_case_style.required_prefix = I
dotnet_naming_symbols.interface_names.applicable_kinds = interface
dotnet_naming_rule.interface_names_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.interface_names_should_be_pascal_case.symbols = interface_names
dotnet_naming_rule.interface_names_should_be_pascal_case.style = interface_pascal_case_style

# Method names should be PascalCase
dotnet_naming_symbols.method_names.applicable_kinds = method
dotnet_naming_rule.method_names_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.method_names_should_be_pascal_case.symbols = method_names
dotnet_naming_rule.method_names_should_be_pascal_case.style = pascal_case_style

# Constant fields should be PascalCase
dotnet_naming_symbols.constant_fields.applicable_kinds = field
dotnet_naming_symbols.constant_fields.required_modifiers = const
dotnet_naming_rule.constant_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.constant_fields_should_be_pascal_case.symbols = constant_fields
dotnet_naming_rule.constant_fields_should_be_pascal_case.style = pascal_case_style

# Public fields should be PascalCase
dotnet_naming_symbols.public_fields.applicable_kinds = field
dotnet_naming_symbols.public_fields.applicable_accessibilities = public
dotnet_naming_rule.camel_case_for_public_fields.severity = suggestion
dotnet_naming_rule.camel_case_for_public_fields.symbols = public_fields
dotnet_naming_rule.camel_case_for_public_fields.style = pascal_case_style

# Private and internal fields should be camelCase
dotnet_naming_style.camel_case_style.capitalization = camel_case
dotnet_naming_symbols.private_internal_fields.applicable_kinds = field
dotnet_naming_symbols.private_internal_fields.applicable_accessibilities = private, internal
dotnet_naming_rule.camel_case_for_private_internal_fields.severity = suggestion
dotnet_naming_rule.camel_case_for_private_internal_fields.symbols = private_internal_fields
dotnet_naming_rule.camel_case_for_private_internal_fields.style = camel_case_style
